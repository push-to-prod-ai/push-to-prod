steps:
  # Build the Docker image for github-app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA', './github-app']

  # Push the github-app Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA']

  # Build the Docker image for blast-radius app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA', './blast-radius-app']

  # Push the blast-radius Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA']

  # Build the Docker image for syntropy app
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA', './syntropy-app' ]

  # Push the syntropy Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA' ]

  # Build the Docker image for frontend app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA', './frontend-app']

  # Push the frontend Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA']

  # Deploy github-app to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'github-app'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--update-env-vars'
      - 'LOG_LEVEL=trace'
      - '--set-secrets'
      - 'WEBHOOK_SECRET=push-to-prod-webhook-secret:latest,GEMINI_API_KEY=push-to-prod-gemini-key:latest,JIRA_EMAIL=push-to-prod-jira-email:latest,JIRA_API_TOKEN=push-to-prod-jira-token:latest,PRIVATE_KEY=push-to-prod-private-key:latest,APP_ID=push-to-prod-app-id:latest'
      - '--allow-unauthenticated'

  # Deploy blast-radius to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'blast-radius'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--memory'
      - '2048Mi'
      - '--set-secrets'
      - 'JIRA_EMAIL=push-to-prod-jira-email:latest,JIRA_API_TOKEN=push-to-prod-jira-token:latest'

  # Deploy syntropy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'syntropy'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--memory'
      - '2048Mi'
      - '--set-secrets'
      - 'GEMINI_API_KEY=push-to-prod-gemini-key:latest'

  # Deploy frontend app to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'frontend'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--set-secrets'
      - 'NEXTAUTH_SECRET=frontend-nextauth-secret:latest,GITHUB_ID=github-oauth-client-id:latest,GITHUB_SECRET=github-oauth-client-secret:latest,SESSION_SECRET=frontend-session-secret:latest,FIREBASE_PROJECT_ID=frontend-firebase-project-id:latest,FIREBASE_CLIENT_EMAIL=frontend-firebase-client-email:latest,FIREBASE_PRIVATE_KEY=frontend-firebase-private-key:latest'
      - '--set-env-vars'
      - 'NEXTAUTH_URL=https://frontend-${PROJECT_NUMBER}.run.app,NODE_ENV=production,PORT=8080'
      - '--allow-unauthenticated'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA'
  
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

substitutions:
  _REGION: 'us-central1'