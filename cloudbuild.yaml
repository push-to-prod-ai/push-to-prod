steps:
  # Build all Docker images in parallel
  - id: 'build-github-app'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA', './github-app']

  - id: 'build-blast-radius'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA', './blast-radius-app']
    waitFor: ['-'] # Start immediately, don't wait for previous step

  - id: 'build-syntropy'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA', './syntropy-app']
    waitFor: ['-'] # Start immediately

  - id: 'build-frontend'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA', './frontend-app']
    waitFor: ['-'] # Start immediately

  # Push images after their respective builds complete
  - id: 'push-github-app'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA']
    waitFor: ['build-github-app']

  - id: 'push-blast-radius'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA']
    waitFor: ['build-blast-radius']

  - id: 'push-syntropy'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA']
    waitFor: ['build-syntropy']

  - id: 'push-frontend'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA']
    waitFor: ['build-frontend']

  # Deploy all services in parallel after their respective images are pushed
  - id: 'deploy-github-app'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'github-app'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--update-env-vars'
      - 'LOG_LEVEL=trace'
      - '--set-secrets'
      - 'WEBHOOK_SECRET=push-to-prod-webhook-secret:latest,GEMINI_API_KEY=push-to-prod-gemini-key:latest,JIRA_EMAIL=push-to-prod-jira-email:latest,JIRA_API_TOKEN=push-to-prod-jira-token:latest,PRIVATE_KEY=push-to-prod-private-key:latest,APP_ID=push-to-prod-app-id:latest'
      - '--allow-unauthenticated'
      - '--service-account=frontend-service-account@$PROJECT_ID.iam.gserviceaccount.com'

    waitFor: ['push-github-app']

  - id: 'deploy-blast-radius'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'blast-radius'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--memory'
      - '2048Mi'
      - '--set-secrets'
      - 'JIRA_EMAIL=push-to-prod-jira-email:latest,JIRA_API_TOKEN=push-to-prod-jira-token:latest'
    waitFor: ['push-blast-radius']

  - id: 'deploy-syntropy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'syntropy'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--memory'
      - '2048Mi'
      - '--set-secrets'
      - 'GEMINI_API_KEY=push-to-prod-gemini-key:latest'
    waitFor: ['push-syntropy']

  - id: 'deploy-frontend'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'frontend'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--set-secrets'
      - 'NEXTAUTH_SECRET=frontend-nextauth-secret:latest,GITHUB_ID=github-oauth-client-id:latest,GITHUB_SECRET=github-oauth-client-secret:latest,SESSION_SECRET=frontend-session-secret:latest,FIREBASE_PROJECT_ID=frontend-firebase-project-id:latest'
      - '--set-env-vars'
      - 'NEXTAUTH_URL=https://frontend-${PROJECT_NUMBER}.us-central1.run.app,NODE_ENV=production'
      - '--allow-unauthenticated'
      - '--service-account=frontend-service-account@$PROJECT_ID.iam.gserviceaccount.com'
    waitFor: ['push-frontend']

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/github-app:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/blast-radius:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/syntropy:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/push-to-prod-builds/frontend:$COMMIT_SHA'
  
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

substitutions:
  _REGION: 'us-central1'