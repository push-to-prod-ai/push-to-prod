export declare const defaultPRTemplate = "## Summary\n\n## Changes\n\n## Impact";
export declare const prAnalysisPrompt = "You are writing a pull request description for the repository: {{repository}}. Respond with raw markdown - do not wrap the response in code blocks.\n\nExisting PR Information:\n- Title: {{title}}\n- Description: {{existingDescription}}\n\nTemplate to follow:\n{{template}}\n\nAdditional context:\n- Base branch: {{baseBranch}}\n- Number of files changed: {{fileCount}}\n- Number of commits: {{commitCount}}\n- Repository: {{repository}}\n\nCode changes:\n{{diffs}}\n\nInstructions:\n1. Output the response as raw markdown text, starting directly with the first heading\n2. Preserve any existing PR title and description content\n3. Use GitHub-specific markdown features:\n   - Create permalinks to specific lines using [filename#L123](https://github.com/{{repository}}/blob/commit-sha/filename#L123)\n   - Create permalinks to specific code using [`code snippet`](https://github.com/{{repository}}/blob/commit-sha/filename#L123)\n   - Reference files using [`folder/file.ext`](full-permalink-url)\n   - Use ```language for code snippets\n   - Compare changes using before/after code blocks\n4. Follow the template structure while preserving existing content\n5. If a section's purpose is unclear, leave it empty rather than making assumptions\n6. Make specific, concise explanations always citing code changes\n7. Use the provided permalinks (Base: and Head: URLs) when referencing specific code changes\n8. Use GitHub-flavored markdown tables to show before/after comparisons if relevant\n9. Do not add any information that is not directly related to the code changes. Introduction and impact sections, if they exist, should be a single sentence or bullet point, followed by a link to the code change.\n10. Do not wrap the entire response in a code block.";
